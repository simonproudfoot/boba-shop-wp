Vue.component("productpage",{props:{image:{type:String,default:""},category:{type:String,default:""},price:{type:Number,default:0},title:{type:String,default:""},description:{type:String,default:""},stockLevel:{type:Number,default:0},sold_out:{type:Boolean,default:!1},productId:{type:Number,required:!0},colorVariations:{type:Array,default:()=>[]},sizes:{type:Array,default:()=>[]},hasVariants:{type:Boolean,default:!1}},data(){return{chosenCount:1,isAddingToCart:!1,addToCartSuccess:!1,addToCartError:"",selectedColor:null,selectedSize:null,currentImage:this.image}},watch:{image(t){this.selectedColor||(this.currentImage=t)}},computed:{random:()=>Math.floor(2*Math.random())+1,uniqueColors(){const t=new Set;return this.colorVariations.filter(e=>!(!e.color||t.has(e.color))&&(t.add(e.color),!0))},availableSizesForColor(){return this.selectedColor?this.colorVariations.filter(t=>t.color===this.selectedColor.color).map(t=>t.size).filter((t,e,i)=>t&&i.indexOf(t)===e):[]},selectedVariant(){return this.selectedColor&&this.selectedSize?this.colorVariations.find(t=>t.color===this.selectedColor.color&&t.size===this.selectedSize):null},effectiveStockLevel(){return this.hasVariants&&this.selectedVariant?this.selectedVariant.stock:this.hasVariants?0:this.stockLevel},imageSrc(){if("string"==typeof this.image)return this.image||"";if(this.image&&"object"==typeof this.image){if(this.isLarge&&this.image.thumb_2200)return this.image.thumb_2200;if(this.image.thumb_1280)return this.image.thumb_1280;if(this.image.full)return this.image.full}return""},imageSrcset(){if("string"==typeof this.image)return null;if(this.image&&"object"==typeof this.image){const t=[];return this.image.thumb_1280&&t.push(this.image.thumb_1280+" 1280w"),this.image.thumb_2200&&this.image.thumb_2200!==this.image.thumb_1280&&t.push(this.image.thumb_2200+" 2200w"),this.image.full&&this.image.full!==this.image.thumb_1280&&this.image.full!==this.image.thumb_2200&&t.push(this.image.full+" 1920w"),t.length?t.join(", "):null}return null},imageSizes:()=>"(max-width: 1280px) 1280px, 2200px",cartUrl:()=>window.location.origin+"/?checkout=1",showMainPrice(){return!this.hasVariants},showMainStock(){return!this.hasVariants},canSelectQuantity(){return this.hasVariants?this.selectedVariant&&this.selectedVariant.stock>0:this.stockLevel>0}},methods:{selectColor(t){this.selectedColor=t,this.currentImage=t.image,this.selectedSize=null,this.chosenCount=1},selectSize(t){if(!this.selectedColor)return;const e=this.colorVariations.find(e=>e.color===this.selectedColor.color&&e.size===t);!e||e.stock<=0||(this.selectedSize=t,this.currentImage=e.image,this.chosenCount=1)},isColorOutOfStock(t){return this.colorVariations.filter(e=>e.color===t).every(t=>t.stock<=0)},isSizeOutOfStock(t,e){const i=this.colorVariations.find(i=>i.color===t&&i.size===e);return!i||i.stock<=0},async addToCart(){if(this.isAddingToCart||this.effectiveStockLevel<=0)return;this.isAddingToCart=!0,this.addToCartSuccess=!1,this.addToCartError="";let t={product_id:this.productId};this.selectedColor&&(t.variation_color=this.selectedColor.color,t.variation_color_name=this.selectedColor.color_name),this.selectedSize&&(t.variation_size=this.selectedSize),this.selectedVariant&&(t.variant_id=this.selectedVariant.color+"-"+this.selectedVariant.size);try{const e=await this.$root.addToCart(t);e.success?this.chosenCount>1?await this.updateQuantity(e):this.finishCartOperation(e):(this.isAddingToCart=!1,this.addToCartError="Failed to add to cart.")}catch(t){this.isAddingToCart=!1,this.addToCartError="An error occurred: "+t}},async updateQuantity(t){let e={product_id:this.productId,quantity:this.chosenCount};this.selectedColor&&(e.variation_color=this.selectedColor.color,e.variation_color_name=this.selectedColor.color_name),this.selectedSize&&(e.variation_size=this.selectedSize),this.selectedVariant&&(e.variant_id=this.selectedVariant.color+"-"+this.selectedVariant.size);try{const i=await this.$root.updateCartQuantity(e);i.success?this.finishCartOperation(i):this.finishCartOperation(t)}catch(e){this.finishCartOperation(t)}},finishCartOperation(t){this.isAddingToCart=!1,this.addToCartSuccess=!0,console.log("Finishing cart operation with response:",t);const e=this.calculateCartQuantity(t.data);console.log("Calculated cart count:",e),window.cartCount=e,this.$root&&(this.$root.cartQuantity=e,this.$root.$forceUpdate(),"function"==typeof this.$root.updateMenuCartDisplay&&this.$root.updateMenuCartDisplay(),console.log("Updated root cart quantity to:",this.$root.cartQuantity)),setTimeout(()=>{this.addToCartSuccess=!1},3e3)},calculateCartQuantity:t=>t?(console.log("Product page calculating cart quantity for:",t),Object.values(t).reduce((t,e)=>{let i=0;return"number"==typeof e?i=e:"object"==typeof e&&null!==e?i=e.quantity||e.qty||0:"string"==typeof e&&(i=parseInt(e,10)||0),t+i},0)):0,buyNow(){this.isAddingToCart||this.effectiveStockLevel<=0||(this.addToCart(),setTimeout(()=>{this.addToCartSuccess&&(window.location.href=this.cartUrl)},800))}},mounted(){if(this.uniqueColors&&this.uniqueColors.length>0){this.selectColor(this.uniqueColors[0]);const t=this.availableSizesForColor;t&&t.length>0&&this.selectSize(t[0])}},template:'\n        <div class=" md:py-12 px-4 md:px-8 font-body">\n            <div class="max-w-7xl mx-auto">\n                <div class="flex flex-col md:flex-row gap-8 lg:gap-16">\n                    \x3c!-- Product Image Section --\x3e\n                    <div class="md:w-1/2 relative group">\n                        <div class="relative "> \n                           \n                            <img class="rounded-lg z-40 relative mx-auto " :src="currentImage" :alt="title" /> \n                        </div>\n                        \n                        \x3c!-- Color Variations --\x3e\n                        <div v-if="uniqueColors && uniqueColors.length > 0" class="mt-4">\n                            <h5 class="text-sm font-medium mb-2">Color <span v-if="selectedColor">: {{ selectedColor.color_name }}</span></h5>\n                            <div class="flex flex-wrap gap-2">\n                                <div v-for="color in uniqueColors" :key="color.color"\n                                    @click="!isColorOutOfStock(color.color) && selectColor(color)"\n                                    class="w-8 h-8 rounded-full cursor-pointer border-2 transition-all"\n                                    :class="[\n                                        selectedColor && selectedColor.color === color.color ? \'border-zinc-800 scale-110\' : \'border-transparent\',\n                                        isColorOutOfStock(color.color) ? \'opacity-40 pointer-events-none cursor-not-allowed\' : \'\'\n                                    ]"\n                                    :style="{ backgroundColor: color.color }">\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    \x3c!-- Product Details Section --\x3e\n                    <div class="md:w-1/2 max-w-md">\n                        <div class="flex flex-col gap-y-4">\n                            <div>\n                                <h4 v-if="category" class="text-sm text-yellow-500 font-light mb-4 opacity-50">{{category}}</h4>\n                                <h1 class="text-3xl md:text-5xl font-heading mb-2 uppercase text-balance"  v-html="title"></h1>\n                                <span v-if="showMainPrice && price" class="text-2xl font-bold block mb-4">£{{ price }}</span>\n                                <div class="stock-status mb-4" v-if="showMainStock">\n                                    <span class="text-sm font-medium" :class="effectiveStockLevel > 0 ? \'text-green-600\' : \'text-red-600\'" v-html="effectiveStockLevel > 0 ? \'In stock - \' + effectiveStockLevel + \' available\' : \'Out of stock\'"></span>\n                                </div>\n                                <div class="product-description prose text-balance mt-4 prose-md mb-6" v-if="description" v-html="description"></div>\n                            </div>\n                            \n\n\n                            \x3c!-- Sizes --\x3e\n                            <div v-if="selectedColor && availableSizesForColor.length > 0" class="mb-4">\n                                <h5 class="text-sm font-medium mb-2">Size</h5>\n                                <div class="flex flex-wrap gap-2">\n                                    <button v-for="size in availableSizesForColor" :key="size"\n                                        v-if="colorVariations.find(v => v.color === selectedColor.color && v.size === size)"\n                                        @click="!isSizeOutOfStock(selectedColor.color, size) && selectSize(size)"\n                                        class="px-4 py-2 border rounded-sm transition-colors duration-200 capitalize"\n                                        :class="[\n                                            selectedSize === size ? \'bg-black text-white border-black\' : \'bg-white text-black hover:bg-zinc-100\',\n                                            isSizeOutOfStock(selectedColor.color, size) ? \'opacity-40 pointer-events-none cursor-not-allowed\' : \'\'\n                                        ]">\n                                        {{ size }}\n                                    </button>\n                                </div>\n                            </div>\n\n                            \x3c!-- Status messages --\x3e\n                            <div v-if="addToCartSuccess" class="text-green-600 py-2 px-4 bg-green-50 rounded-sm mb-4">\n                                ✓ Added to cart successfully!\n                            </div>\n                            <div v-if="addToCartError" class="text-red-600 py-2 px-4 bg-red-50 rounded-sm mb-4">\n                                ✗ {{ addToCartError }}\n                            </div>\n                            \n                            \x3c!-- Purchase Actions --\x3e\n                            <div :class="[\'flex flex-col gap-y-4\', canSelectQuantity ? \'\' : \'opacity-30 pointer-events-none\']">\n                                <div class="quantity-selector">\n                                    <label class="block text-sm font-medium mb-2">Quantity</label>\n                                    <div class="bg-white rounded-sm flex items-center justify-between border border-zinc-300 max-w-[140px]">\n                                        <button @click="canSelectQuantity && chosenCount > 1 ? chosenCount-- : null" class="text-lg w-10 h-10 flex items-center justify-center hover:bg-zinc-100">-</button>\n                                        <span class="font-medium">{{chosenCount}}</span>\n                                        <button @click="canSelectQuantity && chosenCount < effectiveStockLevel ? chosenCount++ : null" class="text-lg w-10 h-10 flex items-center justify-center hover:bg-zinc-100">+</button>\n                                    </div>\n                                </div>\n                                \n                                <div class="buttons-container flex flex-col sm:flex-row gap-3 w-full border">\n                                    <button \n                                        @click="buyNow" \n                                        class="duration-200 hover:bg-zinc-800 rounded-sm text-white text-center font-bold py-3 px-6 bg-black sm:flex-1"\n                                        :disabled="isAddingToCart || !canSelectQuantity">\n                                        {{ isAddingToCart ? \'Processing...\' : \'Buy now\' }}\n                                    </button>\n                                    <button \n                                        @click="addToCart" \n                                        class="duration-200 hover:bg-zinc-500 rounded-sm text-white text-center font-bold py-3 px-6 bg-zinc-400 sm:flex-1"\n                                        :disabled="isAddingToCart || !canSelectQuantity">\n                                        {{ isAddingToCart ? \'Adding...\' : \'Add to basket\' }}\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    '});