{"version":3,"sources":["checkout.js"],"names":["Vue","component","props","stripePublishableKey","type","String","required","deliveryNonce","createOrderNonce","createStripeSessionNonce","adminAjaxUrl","data","stripe","addressSaved","isSubmitting","isCreatingSession","computed","watch","handler","newVal","oldVal","console","log","old","new","immediate","mounted","Stripe","error","initializeRemoveItems","checkoutActions","document","getElementById","outerHTML","methods","handleDeliveryAddressSubmission","event","preventDefault","form","target","formData","FormData","append","pair","entries","action","nonce","customer_name","get","customer_email","saveButton","querySelector","originalText","innerHTML","disabled","response","fetch","method","body","json","success","classList","remove","add","$forceUpdate","alert","createOrder","Error","handleCheckoutClick","createStripeSession","message","status","headers","ok","contentType","includes","warn","text","JSON","parse","e","substring","result","redirectToCheckout","sessionId","session_id","resetCheckoutButton","removeButtons","querySelectorAll","length","forEach","button","addEventListener","productId","getAttribute","variantId","row","closest","confirm","xhr","XMLHttpRequest","open","setRequestHeader","onreadystatechange","readyState","window","location","reload","send","debugComponent","getComputedStyle","display","visibility","$el","$data","$props","testStripeConnection","URLSearchParams"],"mappings":"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","file":"checkout.min.js","sourcesContent":["Vue.component(\"checkout\", {\n    props: {\n        stripePublishableKey: {\n            type: String,\n            required: true\n        },\n        deliveryNonce: {\n            type: String,\n            required: true\n        },\n        createOrderNonce: {\n            type: String,\n            required: true\n        },\n        createStripeSessionNonce: {\n            type: String,\n            required: true\n        },\n        adminAjaxUrl: {\n            type: String,\n            required: true\n        }\n    },\n    data() {\n        return {\n            stripe: null,\n            addressSaved: false,\n            isSubmitting: false,\n            isCreatingSession: false\n        };\n    },\n    computed: {\n        // Computed properties can be added here if needed\n    },\n    watch: {\n        // Watchers can be added here if needed\n        adminAjaxUrl: {\n            handler(newVal, oldVal) {\n                console.log('adminAjaxUrl changed:', { old: oldVal, new: newVal });\n            },\n            immediate: true\n        }\n    },\n            mounted() {\n            console.log('Checkout component mounted, initializing...');\n            console.log('Initial Vue component state:', {\n                addressSaved: this.addressSaved,\n                isSubmitting: this.isSubmitting,\n                isCreatingSession: this.isCreatingSession,\n                stripePublishableKey: this.stripePublishableKey,\n                adminAjaxUrl: this.adminAjaxUrl\n            });\n            \n            // Test if component is working\n        \n            \n            // Initialize Stripe\n            if (typeof Stripe !== 'undefined') {\n                this.stripe = Stripe(this.stripePublishableKey);\n                console.log('Stripe initialized successfully');\n            } else {\n                console.error('Stripe library not loaded');\n            }\n            \n            // Initialize remove item functionality\n            this.initializeRemoveItems();\n            \n            console.log('Checkout component initialization complete');\n            \n            // Check if checkout actions div exists\n            const checkoutActions = document.getElementById('checkout-actions');\n            console.log('Checkout actions div found:', checkoutActions);\n            if (checkoutActions) {\n                console.log('Checkout actions div HTML:', checkoutActions.outerHTML);\n            }\n        },\n    methods: {\n        // Handle delivery address form submission\n        async handleDeliveryAddressSubmission(event) {\n            event.preventDefault();\n            \n            if (this.isSubmitting) return;\n            \n            console.log('Form submitted, preparing AJAX request...');\n            this.isSubmitting = true;\n            \n            const form = event.target;\n            const formData = new FormData(form);\n            formData.append('action', 'delivery_address_submission');\n            formData.append('nonce', this.deliveryNonce);\n            \n            // Log all form data\n            console.log('All form data:');\n            for (let pair of formData.entries()) {\n                console.log(pair[0] + ': ' + pair[1]);\n            }\n            \n            console.log('Form data prepared:', {\n                action: 'delivery_address_submission',\n                nonce: this.deliveryNonce,\n                customer_name: formData.get('customer_name'),\n                customer_email: formData.get('customer_email')\n            });\n            \n            const saveButton = form.querySelector('button[type=\"submit\"]');\n            const originalText = saveButton.innerHTML;\n            saveButton.innerHTML = 'Saving...';\n            saveButton.disabled = true;\n            \n            console.log('Sending AJAX request to:', this.adminAjaxUrl);\n            \n            try {\n                const response = await fetch(this.adminAjaxUrl, {\n                    method: 'POST',\n                    body: formData\n                });\n                \n                console.log('Response received:', response);\n                const data = await response.json();\n                console.log('Response data:', data);\n                \n                if (data.success) {\n                    console.log('Setting addressSaved to true...');\n                    this.addressSaved = true;\n                    console.log('addressSaved is now:', this.addressSaved);\n                    \n                    saveButton.innerHTML = 'Address Saved ✓';\n                    saveButton.classList.remove('bg-green-600', 'hover:bg-green-700');\n                    saveButton.classList.add('bg-gray-500', 'cursor-default');\n                    \n                    console.log('Address saved successfully, checkout button should now be visible');\n                    console.log('Vue component state:', {\n                        addressSaved: this.addressSaved,\n                        isSubmitting: this.isSubmitting,\n                        isCreatingSession: this.isCreatingSession\n                    });\n                    \n                    // Force Vue to re-render\n                    this.$forceUpdate();\n                } else {\n                    console.error('Failed to save address:', data.data);\n                    alert(data.data || 'Failed to save address');\n                    saveButton.innerHTML = originalText;\n                    saveButton.disabled = false;\n                }\n            } catch (error) {\n                console.error('Error during AJAX request:', error);\n                alert('An error occurred while saving your address');\n                saveButton.innerHTML = originalText;\n                saveButton.disabled = false;\n            } finally {\n                this.isSubmitting = false;\n            }\n        },\n        \n        // Create order function\n        async createOrder() {\n            console.log('Creating order...');\n            const formData = new FormData();\n            formData.append('action', 'create_order');\n            formData.append('nonce', this.createOrderNonce);\n            \n            console.log('Sending order creation request...');\n            \n            try {\n                const response = await fetch(this.adminAjaxUrl, {\n                    method: 'POST',\n                    body: formData\n                });\n                \n                console.log('Order creation response received:', response);\n                const data = await response.json();\n                console.log('Order creation data:', data);\n                \n                if (data.success) {\n                    console.log('Order created successfully:', data.data);\n                    return data.data;\n                } else {\n                    console.error('Failed to create order:', data.data);\n                    throw new Error(data.data || 'Failed to create order');\n                }\n            } catch (error) {\n                console.error('Error creating order:', error);\n                throw error;\n            }\n        },\n        \n        // Handle checkout button click\n        async handleCheckoutClick() {\n            if (!this.addressSaved) {\n                alert('Please save your delivery address first');\n                return;\n            }\n            \n            if (this.isCreatingSession) return;\n            \n            console.log('Checkout button clicked, creating order first...');\n            \n            try {\n                // First create the order\n                await this.createOrder();\n                \n                // Then create Stripe checkout session\n                await this.createStripeSession();\n            } catch (error) {\n                console.error('Error during checkout process:', error);\n                alert('An error occurred during checkout: ' + error.message);\n            }\n        },\n        \n        // Create Stripe session function\n        async createStripeSession() {\n            if (this.isCreatingSession) return;\n            \n            this.isCreatingSession = true;\n            const formData = new FormData();\n            formData.append('action', 'create_stripe_session');\n            formData.append('nonce', this.createStripeSessionNonce);\n            \n            console.log('Creating Stripe session...');\n            \n            try {\n                const response = await fetch(this.adminAjaxUrl, {\n                    method: 'POST',\n                    body: formData\n                });\n                \n                console.log('Stripe session response received:', response);\n                console.log('Response status:', response.status);\n                console.log('Response headers:', response.headers);\n                \n                // Check if response is ok\n                if (!response.ok) {\n                    throw new Error('HTTP error! status: ' + response.status);\n                }\n                \n                // Check content type\n                const contentType = response.headers.get('content-type');\n                if (!contentType || !contentType.includes('application/json')) {\n                    console.warn('Response is not JSON, content-type:', contentType);\n                }\n                \n                const text = await response.text();\n                console.log('Response text:', text);\n                \n                let data;\n                try {\n                    data = JSON.parse(text);\n                } catch (e) {\n                    console.error('Failed to parse JSON:', e);\n                    console.error('Raw response:', text);\n                    throw new Error('Invalid JSON response: ' + text.substring(0, 100));\n                }\n                \n                console.log('Stripe session data:', data);\n                \n                if (data.success) {\n                    // Redirect to Stripe Checkout\n                    if (this.stripe) {\n                        const result = await this.stripe.redirectToCheckout({\n                            sessionId: data.data.session_id\n                        });\n                        \n                        if (result.error) {\n                            alert(result.error.message);\n                        }\n                    } else {\n                        throw new Error('Stripe not initialized');\n                    }\n                } else {\n                    alert(data.data || 'Failed to create payment session');\n                }\n            } catch (error) {\n                console.error('Error creating Stripe session:', error);\n                alert('An error occurred while creating payment session: ' + error.message);\n            } finally {\n                this.isCreatingSession = false;\n            }\n        },\n        \n        // Reset checkout button to normal state\n        resetCheckoutButton() {\n            // This method is no longer needed as we're using Vue reactive data\n            // The button state is managed by Vue directives\n        },\n        \n        // Initialize remove item functionality\n        initializeRemoveItems() {\n            console.log('Initializing remove item functionality...');\n            // Handle remove item buttons\n            const removeButtons = document.querySelectorAll('.remove-item');\n            console.log('Found remove buttons:', removeButtons.length);\n            \n            removeButtons.forEach(button => {\n                button.addEventListener('click', (event) => {\n                    const productId = button.getAttribute('data-product-id');\n                    const variantId = button.getAttribute('data-variant-id');\n                    const row = button.closest('tr');\n                    \n                    if (confirm('Are you sure you want to remove this item from your cart?')) {\n                        const xhr = new XMLHttpRequest();\n                        xhr.open('POST', this.adminAjaxUrl, true);\n                        xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n                        xhr.onreadystatechange = function() {\n                            if (xhr.readyState === 4 && xhr.status === 200) {\n                                // Remove the row from the table\n                                row.remove();\n                                // Reload the page to update totals\n                                window.location.reload();\n                            }\n                        };\n                        xhr.send('action=remove_from_cart&product_id=' + productId + '&variant_id=' + variantId);\n                    }\n                });\n            });\n        },\n        \n        // Debug method to check component state\n        debugComponent() {\n            console.log('=== Checkout Component Debug Info ===');\n            console.log('Vue Component State:');\n            console.log('- addressSaved:', this.addressSaved);\n            console.log('- isSubmitting:', this.isSubmitting);\n            console.log('- isCreatingSession:', this.isCreatingSession);\n            console.log('- stripe:', this.stripe);\n            console.log('- adminAjaxUrl:', this.adminAjaxUrl);\n            console.log('- stripePublishableKey:', this.stripePublishableKey);\n            \n            console.log('\\nDOM Elements:');\n            const checkoutActions = document.getElementById('checkout-actions');\n            console.log('- checkout-actions div exists:', !!checkoutActions);\n            if (checkoutActions) {\n                console.log('- checkout-actions div HTML:', checkoutActions.outerHTML);\n                console.log('- checkout-actions div computed style display:', window.getComputedStyle(checkoutActions).display);\n                console.log('- checkout-actions div computed style visibility:', window.getComputedStyle(checkoutActions).visibility);\n            }\n            \n            console.log('\\nVue Component Instance:');\n            console.log('- $el:', this.$el);\n            console.log('- $data:', this.$data);\n            console.log('- $props:', this.$props);\n            \n            console.log('=== End Debug Info ===');\n        },\n        \n        // Test Stripe connection\n        async testStripeConnection() {\n            try {\n                console.log('Testing Stripe connection...');\n                \n                const response = await fetch(this.adminAjaxUrl, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/x-www-form-urlencoded',\n                    },\n                    body: new URLSearchParams({\n                        action: 'test_stripe_connection',\n                        nonce: this.createStripeSessionNonce\n                    })\n                });\n                \n                const data = await response.json();\n                \n                if (data.success) {\n                    alert('Stripe connection test successful!');\n                    console.log('Stripe test result:', data.data);\n                } else {\n                    alert('Stripe connection test failed: ' + (data.data || 'Unknown error'));\n                    console.error('Stripe test failed:', data.data);\n                }\n                \n            } catch (error) {\n                console.error('Error testing Stripe connection:', error);\n                alert('Error testing Stripe connection: ' + error.message);\n            }\n        }\n    }\n});"]}