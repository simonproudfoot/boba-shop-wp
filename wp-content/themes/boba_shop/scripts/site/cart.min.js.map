{"version":3,"sources":["cart.js"],"names":["Vue","component","template","computed","cartUrl","cartQuantity","$root","cartHasItems","cartLabel","count","watch","newVal","oldVal","console","log","$forceUpdate","mounted","refreshCartCount"],"mappings":"AAAAA,IAAIC,SAAJ,CAAc,UAAd,EAA0B;AACtBC,cAAW;;;;;;;;KADW;AAUtBC,cAAU;AACNC,kBAAU;AACN,mBAAO,WAAP;AACH,SAHK;AAINC,uBAAe;AACX,mBAAO,KAAKC,KAAL,CAAWD,YAAX,IAA2B,CAAlC;AACH,SANK;AAONE,uBAAe;AACX,mBAAO,KAAKF,YAAL,GAAoB,CAA3B;AACH,SATK;AAUNG,oBAAY;AACR,kBAAMC,QAAQ,KAAKJ,YAAnB;AACA,mBAAOI,UAAU,CAAV,GAAc,cAAd,GAA+B,eAAtC;AACH;AAbK,KAVY;AAyBtBC,WAAO;AACHL,qBAAaM,MAAb,EAAqBC,MAArB,EAA6B;AACzBC,oBAAQC,GAAR,CAAY,4BAAZ,EAA0CF,MAA1C,EAAkD,IAAlD,EAAwDD,MAAxD,EADyB,CACwC;AACjE;AACA,iBAAKI,YAAL;AACH;AALE,KAzBe;AAgCtBC,cAAU;AACNH,gBAAQC,GAAR,CAAY,kCAAZ,EAAgD,KAAKT,YAArD,EADM,CAC8D;AACpE;AACA,YAAI,KAAKC,KAAL,IAAc,OAAO,KAAKA,KAAL,CAAWW,gBAAlB,KAAuC,UAAzD,EAAqE;AACjE,iBAAKX,KAAL,CAAWW,gBAAX;AACH;AACJ;AAtCqB,CAA1B","file":"cart.min.js","sourcesContent":["Vue.component(\"carticon\", {\n    template: `\n        <div class=\"cart-display\">\n            <a :href=\"cartUrl\" class=\"flex items-center gap-2\">\n                <span class=\"cart-icon\">ðŸ›’</span>\n                <span class=\"cart-count\">{{ cartQuantity }}</span>\n               \n            </a>\n        </div>\n    `,\n    computed: {\n        cartUrl() {\n            return '/checkout';\n        },\n        cartQuantity() {\n            return this.$root.cartQuantity || 0;\n        },\n        cartHasItems() {\n            return this.cartQuantity > 0;\n        },\n        cartLabel() {\n            const count = this.cartQuantity;\n            return count === 1 ? 'item in cart' : 'items in cart';\n        }\n    },\n    watch: {\n        cartQuantity(newVal, oldVal) {\n            console.log('Cart quantity changed from', oldVal, 'to', newVal); // Debug log\n            // Force update when cart quantity changes\n            this.$forceUpdate();\n        }\n    },\n    mounted() {\n        console.log('Cart icon mounted with quantity:', this.cartQuantity); // Debug log\n        // Initial cart count load if needed\n        if (this.$root && typeof this.$root.refreshCartCount === 'function') {\n            this.$root.refreshCartCount();\n        }\n    }\n});"]}